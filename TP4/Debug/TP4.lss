
TP4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000e1a  00000eae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010e  0080010e  00000ebc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ebc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001603  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a5d  00000000  00000000  000026cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000afd  00000000  00000000  00003128  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000384  00000000  00000000  00003c28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000641  00000000  00000000  00003fac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f56  00000000  00000000  000045ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00005543  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <__vector_9>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__vector_21>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

00000068 <LcdCustomChar>:
  68:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  78:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  88:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  98:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d8 e0       	ldi	r29, 0x08	; 8
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	ea e1       	ldi	r30, 0x1A	; 26
  bc:	fe e0       	ldi	r31, 0x0E	; 14
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	ae 30       	cpi	r26, 0x0E	; 14
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	ae e0       	ldi	r26, 0x0E	; 14
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a4 31       	cpi	r26, 0x14	; 20
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 38 02 	call	0x470	; 0x470 <main>
  de:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <ADCInit>:
}
uint16_t ADCGetRead(){
	return read;
}
void ADCSetRead(uint16_t new_read){
	read = new_read;
  e6:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
  ea:	ea e7       	ldi	r30, 0x7A	; 122
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	8f 6a       	ori	r24, 0xAF	; 175
  f2:	80 83       	st	Z, r24
  f4:	08 95       	ret

000000f6 <ADCStart>:
  f6:	ea e7       	ldi	r30, 0x7A	; 122
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	80 64       	ori	r24, 0x40	; 64
  fe:	80 83       	st	Z, r24
 100:	08 95       	ret

00000102 <ADCGetRead>:
 102:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 106:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 10a:	08 95       	ret

0000010c <__vector_21>:
}
ISR(ADC_vect){
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
	ADCSetRead(ADC);
 11a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 11e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
uint16_t ADCGetRead(){
	return read;
}
void ADCSetRead(uint16_t new_read){
	read = new_read;
 122:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
 126:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}
ISR(ADC_vect){
	ADCSetRead(ADC);
}
 12a:	9f 91       	pop	r25
 12c:	8f 91       	pop	r24
 12e:	0f 90       	pop	r0
 130:	0f be       	out	0x3f, r0	; 63
 132:	0f 90       	pop	r0
 134:	1f 90       	pop	r1
 136:	18 95       	reti

00000138 <LCDsendChar>:
	LCDGotoXY(x,y);
	for(i=0;(uint8_t)pgm_read_byte(&FlashLoc[i]);i++)
	{
		LCDsendChar((uint8_t)pgm_read_byte(&FlashLoc[i]));
	}
}
 138:	98 2f       	mov	r25, r24
 13a:	90 7f       	andi	r25, 0xF0	; 240
 13c:	9b b9       	out	0x0b, r25	; 11
 13e:	58 9a       	sbi	0x0b, 0	; 11
 140:	5a 9a       	sbi	0x0b, 2	; 11
 142:	2d e0       	ldi	r18, 0x0D	; 13
 144:	2a 95       	dec	r18
 146:	f1 f7       	brne	.-4      	; 0x144 <LCDsendChar+0xc>
 148:	00 00       	nop
 14a:	5a 98       	cbi	0x0b, 2	; 11
 14c:	58 98       	cbi	0x0b, 0	; 11
 14e:	9d e0       	ldi	r25, 0x0D	; 13
 150:	9a 95       	dec	r25
 152:	f1 f7       	brne	.-4      	; 0x150 <LCDsendChar+0x18>
 154:	00 00       	nop
 156:	20 e1       	ldi	r18, 0x10	; 16
 158:	82 9f       	mul	r24, r18
 15a:	c0 01       	movw	r24, r0
 15c:	11 24       	eor	r1, r1
 15e:	8b b9       	out	0x0b, r24	; 11
 160:	58 9a       	sbi	0x0b, 0	; 11
 162:	5a 9a       	sbi	0x0b, 2	; 11
 164:	8d e0       	ldi	r24, 0x0D	; 13
 166:	8a 95       	dec	r24
 168:	f1 f7       	brne	.-4      	; 0x166 <LCDsendChar+0x2e>
 16a:	00 00       	nop
 16c:	5a 98       	cbi	0x0b, 2	; 11
 16e:	58 98       	cbi	0x0b, 0	; 11
 170:	9d e0       	ldi	r25, 0x0D	; 13
 172:	9a 95       	dec	r25
 174:	f1 f7       	brne	.-4      	; 0x172 <LCDsendChar+0x3a>
 176:	00 00       	nop
 178:	08 95       	ret

0000017a <LCDsendCommand>:
 17a:	98 2f       	mov	r25, r24
 17c:	90 7f       	andi	r25, 0xF0	; 240
 17e:	9b b9       	out	0x0b, r25	; 11
 180:	5a 9a       	sbi	0x0b, 2	; 11
 182:	e9 ef       	ldi	r30, 0xF9	; 249
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	31 97       	sbiw	r30, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <LCDsendCommand+0xc>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCDsendCommand+0x12>
 18c:	00 00       	nop
 18e:	5a 98       	cbi	0x0b, 2	; 11
 190:	e9 ef       	ldi	r30, 0xF9	; 249
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	31 97       	sbiw	r30, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <LCDsendCommand+0x1a>
 198:	00 c0       	rjmp	.+0      	; 0x19a <LCDsendCommand+0x20>
 19a:	00 00       	nop
 19c:	f0 e1       	ldi	r31, 0x10	; 16
 19e:	8f 9f       	mul	r24, r31
 1a0:	c0 01       	movw	r24, r0
 1a2:	11 24       	eor	r1, r1
 1a4:	8b b9       	out	0x0b, r24	; 11
 1a6:	5a 9a       	sbi	0x0b, 2	; 11
 1a8:	89 ef       	ldi	r24, 0xF9	; 249
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCDsendCommand+0x32>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <LCDsendCommand+0x38>
 1b2:	00 00       	nop
 1b4:	5a 98       	cbi	0x0b, 2	; 11
 1b6:	e9 ef       	ldi	r30, 0xF9	; 249
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCDsendCommand+0x40>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <LCDsendCommand+0x46>
 1c0:	00 00       	nop
 1c2:	08 95       	ret

000001c4 <LCDclr>:
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 bd 00 	call	0x17a	; 0x17a <LCDsendCommand>
 1ca:	08 95       	ret

000001cc <LCDstring>:
 1cc:	0f 93       	push	r16
 1ce:	1f 93       	push	r17
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	00 97       	sbiw	r24, 0x00	; 0
 1d6:	81 f0       	breq	.+32     	; 0x1f8 <LCDstring+0x2c>
 1d8:	66 23       	and	r22, r22
 1da:	71 f0       	breq	.+28     	; 0x1f8 <LCDstring+0x2c>
 1dc:	ec 01       	movw	r28, r24
 1de:	61 50       	subi	r22, 0x01	; 1
 1e0:	06 2f       	mov	r16, r22
 1e2:	10 e0       	ldi	r17, 0x00	; 0
 1e4:	0f 5f       	subi	r16, 0xFF	; 255
 1e6:	1f 4f       	sbci	r17, 0xFF	; 255
 1e8:	08 0f       	add	r16, r24
 1ea:	19 1f       	adc	r17, r25
 1ec:	89 91       	ld	r24, Y+
 1ee:	0e 94 9c 00 	call	0x138	; 0x138 <LCDsendChar>
 1f2:	c0 17       	cp	r28, r16
 1f4:	d1 07       	cpc	r29, r17
 1f6:	d1 f7       	brne	.-12     	; 0x1ec <LCDstring+0x20>
 1f8:	df 91       	pop	r29
 1fa:	cf 91       	pop	r28
 1fc:	1f 91       	pop	r17
 1fe:	0f 91       	pop	r16
 200:	08 95       	ret

00000202 <LCDGotoXY>:
 202:	62 30       	cpi	r22, 0x02	; 2
 204:	31 f0       	breq	.+12     	; 0x212 <LCDGotoXY+0x10>
 206:	63 30       	cpi	r22, 0x03	; 3
 208:	31 f0       	breq	.+12     	; 0x216 <LCDGotoXY+0x14>
 20a:	61 30       	cpi	r22, 0x01	; 1
 20c:	29 f4       	brne	.+10     	; 0x218 <LCDGotoXY+0x16>
 20e:	80 5c       	subi	r24, 0xC0	; 192
 210:	03 c0       	rjmp	.+6      	; 0x218 <LCDGotoXY+0x16>
 212:	8c 5e       	subi	r24, 0xEC	; 236
 214:	01 c0       	rjmp	.+2      	; 0x218 <LCDGotoXY+0x16>
 216:	8c 5a       	subi	r24, 0xAC	; 172
 218:	80 68       	ori	r24, 0x80	; 128
 21a:	0e 94 bd 00 	call	0x17a	; 0x17a <LCDsendCommand>
 21e:	08 95       	ret

00000220 <LCDdefinechar>:
0b00000000,
0b00000000
};
LCDdefinechar(backslash,0);
*/
void LCDdefinechar(const uint8_t *pc,uint8_t char_code){
 220:	ff 92       	push	r15
 222:	0f 93       	push	r16
 224:	1f 93       	push	r17
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
 22a:	66 0f       	add	r22, r22
 22c:	66 0f       	add	r22, r22
 22e:	66 0f       	add	r22, r22
 230:	60 64       	ori	r22, 0x40	; 64
 232:	ec 01       	movw	r28, r24
 234:	68 94       	set
 236:	ff 24       	eor	r15, r15
 238:	f3 f8       	bld	r15, 3
 23a:	f6 0e       	add	r15, r22
	for (i=0; i<8; i++){
		pcc=pgm_read_byte(&pc[i]);
 23c:	fe 01       	movw	r30, r28
 23e:	04 91       	lpm	r16, Z
		LCDsendCommand(a++);
 240:	11 e0       	ldi	r17, 0x01	; 1
 242:	16 0f       	add	r17, r22
 244:	86 2f       	mov	r24, r22
 246:	0e 94 bd 00 	call	0x17a	; 0x17a <LCDsendCommand>
		LCDsendChar(pcc);
 24a:	80 2f       	mov	r24, r16
 24c:	0e 94 9c 00 	call	0x138	; 0x138 <LCDsendChar>
 250:	21 96       	adiw	r28, 0x01	; 1
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
		pcc=pgm_read_byte(&pc[i]);
		LCDsendCommand(a++);
 252:	61 2f       	mov	r22, r17
*/
void LCDdefinechar(const uint8_t *pc,uint8_t char_code){
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
 254:	1f 11       	cpse	r17, r15
 256:	f2 cf       	rjmp	.-28     	; 0x23c <LCDdefinechar+0x1c>
		pcc=pgm_read_byte(&pc[i]);
		LCDsendCommand(a++);
		LCDsendChar(pcc);
		}
}
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	1f 91       	pop	r17
 25e:	0f 91       	pop	r16
 260:	ff 90       	pop	r15
 262:	08 95       	ret

00000264 <LCDinit>:
	LCP&=~(1<<LCD_E);
	_delay_ms(1);	
#endif
}
void LCDinit(void)//Initializes LCD
{
 264:	1f 93       	push	r17
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 26a:	85 ea       	ldi	r24, 0xA5	; 165
 26c:	9e e0       	ldi	r25, 0x0E	; 14
 26e:	01 97       	sbiw	r24, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <LCDinit+0xa>
 272:	00 c0       	rjmp	.+0      	; 0x274 <LCDinit+0x10>
 274:	00 00       	nop
#ifdef LCD_4bit	
	//4 bit part
	_delay_ms(15);
	LDP=0x00;
 276:	1b b8       	out	0x0b, r1	; 11
	LCP=0x00;
 278:	1b b8       	out	0x0b, r1	; 11
	LDDR|=1<<LCD_D7|1<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
 27a:	8a b1       	in	r24, 0x0a	; 10
 27c:	80 6f       	ori	r24, 0xF0	; 240
 27e:	8a b9       	out	0x0a, r24	; 10
	LCDR|=1<<LCD_E|1<<LCD_RW|1<<LCD_RS;
 280:	8a b1       	in	r24, 0x0a	; 10
 282:	87 60       	ori	r24, 0x07	; 7
 284:	8a b9       	out	0x0a, r24	; 10
   //---------one------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
 286:	80 e3       	ldi	r24, 0x30	; 48
 288:	8b b9       	out	0x0b, r24	; 11
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 28a:	5a 9a       	sbi	0x0b, 2	; 11
 28c:	e9 ef       	ldi	r30, 0xF9	; 249
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	31 97       	sbiw	r30, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <LCDinit+0x2c>
 294:	00 c0       	rjmp	.+0      	; 0x296 <LCDinit+0x32>
 296:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 298:	5a 98       	cbi	0x0b, 2	; 11
 29a:	e9 ef       	ldi	r30, 0xF9	; 249
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	31 97       	sbiw	r30, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <LCDinit+0x3a>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <LCDinit+0x40>
 2a4:	00 00       	nop
	_delay_ms(1);
	//-----------two-----------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
 2a6:	8b b9       	out	0x0b, r24	; 11
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 2a8:	5a 9a       	sbi	0x0b, 2	; 11
 2aa:	89 ef       	ldi	r24, 0xF9	; 249
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <LCDinit+0x4a>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <LCDinit+0x50>
 2b4:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 2b6:	5a 98       	cbi	0x0b, 2	; 11
 2b8:	e9 ef       	ldi	r30, 0xF9	; 249
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	31 97       	sbiw	r30, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <LCDinit+0x58>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <LCDinit+0x5e>
 2c2:	00 00       	nop
	_delay_ms(1);
	//-------three-------------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //4 bit mode
 2c4:	80 e2       	ldi	r24, 0x20	; 32
 2c6:	8b b9       	out	0x0b, r24	; 11
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 2c8:	5a 9a       	sbi	0x0b, 2	; 11
 2ca:	89 ef       	ldi	r24, 0xF9	; 249
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	01 97       	sbiw	r24, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <LCDinit+0x6a>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <LCDinit+0x70>
 2d4:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 2d6:	5a 98       	cbi	0x0b, 2	; 11
 2d8:	e9 ef       	ldi	r30, 0xF9	; 249
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	31 97       	sbiw	r30, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <LCDinit+0x78>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <LCDinit+0x7e>
 2e2:	00 00       	nop
	_delay_ms(1);
	//--------4 bit--dual line---------------
	LCDsendCommand(0b00101000);
 2e4:	88 e2       	ldi	r24, 0x28	; 40
 2e6:	0e 94 bd 00 	call	0x17a	; 0x17a <LCDsendCommand>
   //-----increment address, invisible cursor shift------
	LCDsendCommand(0b00001100);
 2ea:	8c e0       	ldi	r24, 0x0C	; 12
 2ec:	0e 94 bd 00 	call	0x17a	; 0x17a <LCDsendCommand>
 2f0:	c8 e6       	ldi	r28, 0x68	; 104
 2f2:	d0 e0       	ldi	r29, 0x00	; 0
		//init 8 custom chars
	uint8_t ch=0, chn=0;
 2f4:	60 e0       	ldi	r22, 0x00	; 0
	while(ch<64)
	{
		LCDdefinechar((LcdCustomChar+ch),chn++);
 2f6:	11 e0       	ldi	r17, 0x01	; 1
 2f8:	16 0f       	add	r17, r22
 2fa:	ce 01       	movw	r24, r28
 2fc:	0e 94 10 01 	call	0x220	; 0x220 <LCDdefinechar>
 300:	28 96       	adiw	r28, 0x08	; 8
 302:	61 2f       	mov	r22, r17
	LCDsendCommand(0b00101000);
   //-----increment address, invisible cursor shift------
	LCDsendCommand(0b00001100);
		//init 8 custom chars
	uint8_t ch=0, chn=0;
	while(ch<64)
 304:	18 30       	cpi	r17, 0x08	; 8
 306:	b9 f7       	brne	.-18     	; 0x2f6 <LCDinit+0x92>
		LCDdefinechar((LcdCustomChar+ch),chn++);
		ch=ch+8;
	}

#endif
}			
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	1f 91       	pop	r17
 30e:	08 95       	ret

00000310 <printTempTask>:
		if(TIMER2GetTempFlag() == 1){
			checkTempTask();
		}
    }
}
void printTempTask(){
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	cd b7       	in	r28, 0x3d	; 61
 31a:	de b7       	in	r29, 0x3e	; 62
 31c:	2d 97       	sbiw	r28, 0x0d	; 13
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	f8 94       	cli
 322:	de bf       	out	0x3e, r29	; 62
 324:	0f be       	out	0x3f, r0	; 63
 326:	cd bf       	out	0x3d, r28	; 61
	//actualizo LCD
	char formato[13] ;
	temperature = (ADCGetRead()*0.488*10);//redondear para rriba?
 328:	0e 94 81 00 	call	0x102	; 0x102 <ADCGetRead>
 32c:	bc 01       	movw	r22, r24
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	0e 94 bc 02 	call	0x578	; 0x578 <__floatunsisf>
 336:	23 e2       	ldi	r18, 0x23	; 35
 338:	3b ed       	ldi	r19, 0xDB	; 219
 33a:	49 ef       	ldi	r20, 0xF9	; 249
 33c:	5e e3       	ldi	r21, 0x3E	; 62
 33e:	0e 94 22 03 	call	0x644	; 0x644 <__mulsf3>
 342:	20 e0       	ldi	r18, 0x00	; 0
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	40 e2       	ldi	r20, 0x20	; 32
 348:	51 e4       	ldi	r21, 0x41	; 65
 34a:	0e 94 22 03 	call	0x644	; 0x644 <__mulsf3>
 34e:	0e 94 8d 02 	call	0x51a	; 0x51a <__fixunssfsi>
 352:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <temperature+0x1>
 356:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <temperature>
	uint8_t parteEntera = temperature/10;
 35a:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <temperature>
 35e:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <temperature+0x1>
 362:	ad ec       	ldi	r26, 0xCD	; 205
 364:	bc ec       	ldi	r27, 0xCC	; 204
 366:	0e 94 04 04 	call	0x808	; 0x808 <__umulhisi3>
 36a:	8c 01       	movw	r16, r24
 36c:	16 95       	lsr	r17
 36e:	07 95       	ror	r16
 370:	16 95       	lsr	r17
 372:	07 95       	ror	r16
 374:	16 95       	lsr	r17
 376:	07 95       	ror	r16
	uint8_t parteFraccionaria = temperature % 10;
 378:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <temperature>
 37c:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <temperature+0x1>
	snprintf(formato,sizeof(formato),"TEMP: %d,%d C",parteEntera,parteFraccionaria);
 380:	9a 01       	movw	r18, r20
 382:	0e 94 04 04 	call	0x808	; 0x808 <__umulhisi3>
 386:	96 95       	lsr	r25
 388:	87 95       	ror	r24
 38a:	96 95       	lsr	r25
 38c:	87 95       	ror	r24
 38e:	96 95       	lsr	r25
 390:	87 95       	ror	r24
 392:	9c 01       	movw	r18, r24
 394:	22 0f       	add	r18, r18
 396:	33 1f       	adc	r19, r19
 398:	88 0f       	add	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	88 0f       	add	r24, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	82 0f       	add	r24, r18
 3a6:	93 1f       	adc	r25, r19
 3a8:	48 1b       	sub	r20, r24
 3aa:	59 0b       	sbc	r21, r25
 3ac:	55 27       	eor	r21, r21
 3ae:	5f 93       	push	r21
 3b0:	4f 93       	push	r20
 3b2:	c8 01       	movw	r24, r16
 3b4:	99 27       	eor	r25, r25
 3b6:	9f 93       	push	r25
 3b8:	8f 93       	push	r24
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	9f 93       	push	r25
 3c0:	8f 93       	push	r24
 3c2:	1f 92       	push	r1
 3c4:	8d e0       	ldi	r24, 0x0D	; 13
 3c6:	8f 93       	push	r24
 3c8:	ce 01       	movw	r24, r28
 3ca:	01 96       	adiw	r24, 0x01	; 1
 3cc:	9f 93       	push	r25
 3ce:	8f 93       	push	r24
 3d0:	0e 94 13 04 	call	0x826	; 0x826 <snprintf>
	LCDclr();
 3d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCDclr>
	LCDGotoXY(0,0);
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	0e 94 01 01 	call	0x202	; 0x202 <LCDGotoXY>
	if (parteEntera < 10){
 3e0:	0f b6       	in	r0, 0x3f	; 63
 3e2:	f8 94       	cli
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	cd bf       	out	0x3d, r28	; 61
 3ea:	0a 30       	cpi	r16, 0x0A	; 10
 3ec:	30 f4       	brcc	.+12     	; 0x3fa <printTempTask+0xea>
		LCDstring(formato,sizeof(formato)-2);
 3ee:	6b e0       	ldi	r22, 0x0B	; 11
 3f0:	ce 01       	movw	r24, r28
 3f2:	01 96       	adiw	r24, 0x01	; 1
 3f4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCDstring>
 3f8:	05 c0       	rjmp	.+10     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
		
	}else LCDstring(formato,sizeof(formato)-1);
 3fa:	6c e0       	ldi	r22, 0x0C	; 12
 3fc:	ce 01       	movw	r24, r28
 3fe:	01 96       	adiw	r24, 0x01	; 1
 400:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCDstring>
	
	TIMER2ResetPrintFlag();
 404:	0e 94 71 02 	call	0x4e2	; 0x4e2 <TIMER2ResetPrintFlag>
}
 408:	2d 96       	adiw	r28, 0x0d	; 13
 40a:	0f b6       	in	r0, 0x3f	; 63
 40c:	f8 94       	cli
 40e:	de bf       	out	0x3e, r29	; 62
 410:	0f be       	out	0x3f, r0	; 63
 412:	cd bf       	out	0x3d, r28	; 61
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	1f 91       	pop	r17
 41a:	0f 91       	pop	r16
 41c:	08 95       	ret

0000041e <checkTempTask>:

void checkTempTask(){
	//check temperatura y ejecuto actuadores
	temperature = round((ADCGetRead()*0.488));
 41e:	0e 94 81 00 	call	0x102	; 0x102 <ADCGetRead>
 422:	bc 01       	movw	r22, r24
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 bc 02 	call	0x578	; 0x578 <__floatunsisf>
 42c:	23 e2       	ldi	r18, 0x23	; 35
 42e:	3b ed       	ldi	r19, 0xDB	; 219
 430:	49 ef       	ldi	r20, 0xF9	; 249
 432:	5e e3       	ldi	r21, 0x3E	; 62
 434:	0e 94 22 03 	call	0x644	; 0x644 <__mulsf3>
 438:	0e 94 8f 03 	call	0x71e	; 0x71e <round>
 43c:	0e 94 8d 02 	call	0x51a	; 0x51a <__fixunssfsi>
 440:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <temperature+0x1>
 444:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <temperature>
	if (temperature > 24){
 448:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <temperature>
 44c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <temperature+0x1>
 450:	49 97       	sbiw	r24, 0x19	; 25
 452:	10 f0       	brcs	.+4      	; 0x458 <checkTempTask+0x3a>
		PORTB |=(1<<PB0); 
 454:	28 9a       	sbi	0x05, 0	; 5
 456:	09 c0       	rjmp	.+18     	; 0x46a <checkTempTask+0x4c>
	}else if (temperature < 17)
 458:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <temperature>
 45c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <temperature+0x1>
 460:	41 97       	sbiw	r24, 0x11	; 17
 462:	10 f4       	brcc	.+4      	; 0x468 <checkTempTask+0x4a>
	{
		PORTB |=(1<<PB1);
 464:	29 9a       	sbi	0x05, 1	; 5
 466:	01 c0       	rjmp	.+2      	; 0x46a <checkTempTask+0x4c>
	}else 
	{
		PORTB = 0x00;
 468:	15 b8       	out	0x05, r1	; 5
	}
	TIMER2ResetTempFlag();
 46a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <TIMER2ResetTempFlag>
 46e:	08 95       	ret

00000470 <main>:
static volatile uint16_t temperature;


int main(void)
{
	DIDR0= 0x01;//ADC0 como analog input
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
	DDRB = 0x03;
 476:	83 e0       	ldi	r24, 0x03	; 3
 478:	84 b9       	out	0x04, r24	; 4

	
	ADCInit();
 47a:	0e 94 73 00 	call	0xe6	; 0xe6 <ADCInit>
	LCDinit();
 47e:	0e 94 32 01 	call	0x264	; 0x264 <LCDinit>
	LCDclr();
 482:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCDclr>
	LCDGotoXY(0,0);
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	0e 94 01 01 	call	0x202	; 0x202 <LCDGotoXY>
	TIMER2Init();
 48e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <TIMER2Init>
	ADCStart();
 492:	0e 94 7b 00 	call	0xf6	; 0xf6 <ADCStart>
	sei();
 496:	78 94       	sei
	
    while (1) 
    {
		if (TIMER2GetPrintFlag() == 2){
 498:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <TIMER2GetPrintFlag>
 49c:	82 30       	cpi	r24, 0x02	; 2
 49e:	11 f4       	brne	.+4      	; 0x4a4 <main+0x34>
			printTempTask();
 4a0:	0e 94 88 01 	call	0x310	; 0x310 <printTempTask>
		}
		if(TIMER2GetTempFlag() == 1){
 4a4:	0e 94 6e 02 	call	0x4dc	; 0x4dc <TIMER2GetTempFlag>
 4a8:	81 30       	cpi	r24, 0x01	; 1
 4aa:	b1 f7       	brne	.-20     	; 0x498 <main+0x28>
			checkTempTask();
 4ac:	0e 94 0f 02 	call	0x41e	; 0x41e <checkTempTask>
 4b0:	f3 cf       	rjmp	.-26     	; 0x498 <main+0x28>

000004b2 <TIMER2Init>:
static uint8_t TEMP_FLAG = 0;
static uint8_t PRINT_FLAG = 0;

void TIMER2Init(){
/* interrupcion cada 0,25s*/
	ASSR|= (1<<AS2) ;
 4b2:	e6 eb       	ldi	r30, 0xB6	; 182
 4b4:	f0 e0       	ldi	r31, 0x00	; 0
 4b6:	80 81       	ld	r24, Z
 4b8:	80 62       	ori	r24, 0x20	; 32
 4ba:	80 83       	st	Z, r24
	TCCR2A =0x00;
 4bc:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
	TCCR2B |= (1<<CS21) | (1<<CS20);//preescalador 32 T = 0,25s
 4c0:	e1 eb       	ldi	r30, 0xB1	; 177
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	80 81       	ld	r24, Z
 4c6:	83 60       	ori	r24, 0x03	; 3
 4c8:	80 83       	st	Z, r24
	TIMSK2 |=  (1<<TOIE2);
 4ca:	e0 e7       	ldi	r30, 0x70	; 112
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	80 81       	ld	r24, Z
 4d0:	81 60       	ori	r24, 0x01	; 1
 4d2:	80 83       	st	Z, r24
 4d4:	08 95       	ret

000004d6 <TIMER2GetPrintFlag>:
}
uint8_t TIMER2GetPrintFlag(){
	return PRINT_FLAG;
}
 4d6:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <PRINT_FLAG>
 4da:	08 95       	ret

000004dc <TIMER2GetTempFlag>:
uint8_t TIMER2GetTempFlag(){
	return TEMP_FLAG;
}
 4dc:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <TEMP_FLAG>
 4e0:	08 95       	ret

000004e2 <TIMER2ResetPrintFlag>:

void TIMER2ResetPrintFlag(){
	PRINT_FLAG =0;
 4e2:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <PRINT_FLAG>
 4e6:	08 95       	ret

000004e8 <TIMER2ResetTempFlag>:
}
void TIMER2ResetTempFlag(){
	TEMP_FLAG =0;
 4e8:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <TEMP_FLAG>
 4ec:	08 95       	ret

000004ee <__vector_9>:
}
ISR (TIMER2_OVF_vect)
{
 4ee:	1f 92       	push	r1
 4f0:	0f 92       	push	r0
 4f2:	0f b6       	in	r0, 0x3f	; 63
 4f4:	0f 92       	push	r0
 4f6:	11 24       	eor	r1, r1
 4f8:	8f 93       	push	r24
	TEMP_FLAG++;
 4fa:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <TEMP_FLAG>
 4fe:	8f 5f       	subi	r24, 0xFF	; 255
 500:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <TEMP_FLAG>
	PRINT_FLAG++;
 504:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <PRINT_FLAG>
 508:	8f 5f       	subi	r24, 0xFF	; 255
 50a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <PRINT_FLAG>
 50e:	8f 91       	pop	r24
 510:	0f 90       	pop	r0
 512:	0f be       	out	0x3f, r0	; 63
 514:	0f 90       	pop	r0
 516:	1f 90       	pop	r1
 518:	18 95       	reti

0000051a <__fixunssfsi>:
 51a:	0e 94 01 03 	call	0x602	; 0x602 <__fp_splitA>
 51e:	88 f0       	brcs	.+34     	; 0x542 <__fixunssfsi+0x28>
 520:	9f 57       	subi	r25, 0x7F	; 127
 522:	98 f0       	brcs	.+38     	; 0x54a <__fixunssfsi+0x30>
 524:	b9 2f       	mov	r27, r25
 526:	99 27       	eor	r25, r25
 528:	b7 51       	subi	r27, 0x17	; 23
 52a:	b0 f0       	brcs	.+44     	; 0x558 <__fixunssfsi+0x3e>
 52c:	e1 f0       	breq	.+56     	; 0x566 <__fixunssfsi+0x4c>
 52e:	66 0f       	add	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	99 1f       	adc	r25, r25
 536:	1a f0       	brmi	.+6      	; 0x53e <__fixunssfsi+0x24>
 538:	ba 95       	dec	r27
 53a:	c9 f7       	brne	.-14     	; 0x52e <__fixunssfsi+0x14>
 53c:	14 c0       	rjmp	.+40     	; 0x566 <__fixunssfsi+0x4c>
 53e:	b1 30       	cpi	r27, 0x01	; 1
 540:	91 f0       	breq	.+36     	; 0x566 <__fixunssfsi+0x4c>
 542:	0e 94 1b 03 	call	0x636	; 0x636 <__fp_zero>
 546:	b1 e0       	ldi	r27, 0x01	; 1
 548:	08 95       	ret
 54a:	0c 94 1b 03 	jmp	0x636	; 0x636 <__fp_zero>
 54e:	67 2f       	mov	r22, r23
 550:	78 2f       	mov	r23, r24
 552:	88 27       	eor	r24, r24
 554:	b8 5f       	subi	r27, 0xF8	; 248
 556:	39 f0       	breq	.+14     	; 0x566 <__fixunssfsi+0x4c>
 558:	b9 3f       	cpi	r27, 0xF9	; 249
 55a:	cc f3       	brlt	.-14     	; 0x54e <__fixunssfsi+0x34>
 55c:	86 95       	lsr	r24
 55e:	77 95       	ror	r23
 560:	67 95       	ror	r22
 562:	b3 95       	inc	r27
 564:	d9 f7       	brne	.-10     	; 0x55c <__fixunssfsi+0x42>
 566:	3e f4       	brtc	.+14     	; 0x576 <__fixunssfsi+0x5c>
 568:	90 95       	com	r25
 56a:	80 95       	com	r24
 56c:	70 95       	com	r23
 56e:	61 95       	neg	r22
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	08 95       	ret

00000578 <__floatunsisf>:
 578:	e8 94       	clt
 57a:	09 c0       	rjmp	.+18     	; 0x58e <__floatsisf+0x12>

0000057c <__floatsisf>:
 57c:	97 fb       	bst	r25, 7
 57e:	3e f4       	brtc	.+14     	; 0x58e <__floatsisf+0x12>
 580:	90 95       	com	r25
 582:	80 95       	com	r24
 584:	70 95       	com	r23
 586:	61 95       	neg	r22
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	99 23       	and	r25, r25
 590:	a9 f0       	breq	.+42     	; 0x5bc <__floatsisf+0x40>
 592:	f9 2f       	mov	r31, r25
 594:	96 e9       	ldi	r25, 0x96	; 150
 596:	bb 27       	eor	r27, r27
 598:	93 95       	inc	r25
 59a:	f6 95       	lsr	r31
 59c:	87 95       	ror	r24
 59e:	77 95       	ror	r23
 5a0:	67 95       	ror	r22
 5a2:	b7 95       	ror	r27
 5a4:	f1 11       	cpse	r31, r1
 5a6:	f8 cf       	rjmp	.-16     	; 0x598 <__floatsisf+0x1c>
 5a8:	fa f4       	brpl	.+62     	; 0x5e8 <__floatsisf+0x6c>
 5aa:	bb 0f       	add	r27, r27
 5ac:	11 f4       	brne	.+4      	; 0x5b2 <__floatsisf+0x36>
 5ae:	60 ff       	sbrs	r22, 0
 5b0:	1b c0       	rjmp	.+54     	; 0x5e8 <__floatsisf+0x6c>
 5b2:	6f 5f       	subi	r22, 0xFF	; 255
 5b4:	7f 4f       	sbci	r23, 0xFF	; 255
 5b6:	8f 4f       	sbci	r24, 0xFF	; 255
 5b8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ba:	16 c0       	rjmp	.+44     	; 0x5e8 <__floatsisf+0x6c>
 5bc:	88 23       	and	r24, r24
 5be:	11 f0       	breq	.+4      	; 0x5c4 <__floatsisf+0x48>
 5c0:	96 e9       	ldi	r25, 0x96	; 150
 5c2:	11 c0       	rjmp	.+34     	; 0x5e6 <__floatsisf+0x6a>
 5c4:	77 23       	and	r23, r23
 5c6:	21 f0       	breq	.+8      	; 0x5d0 <__floatsisf+0x54>
 5c8:	9e e8       	ldi	r25, 0x8E	; 142
 5ca:	87 2f       	mov	r24, r23
 5cc:	76 2f       	mov	r23, r22
 5ce:	05 c0       	rjmp	.+10     	; 0x5da <__floatsisf+0x5e>
 5d0:	66 23       	and	r22, r22
 5d2:	71 f0       	breq	.+28     	; 0x5f0 <__floatsisf+0x74>
 5d4:	96 e8       	ldi	r25, 0x86	; 134
 5d6:	86 2f       	mov	r24, r22
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	60 e0       	ldi	r22, 0x00	; 0
 5dc:	2a f0       	brmi	.+10     	; 0x5e8 <__floatsisf+0x6c>
 5de:	9a 95       	dec	r25
 5e0:	66 0f       	add	r22, r22
 5e2:	77 1f       	adc	r23, r23
 5e4:	88 1f       	adc	r24, r24
 5e6:	da f7       	brpl	.-10     	; 0x5de <__floatsisf+0x62>
 5e8:	88 0f       	add	r24, r24
 5ea:	96 95       	lsr	r25
 5ec:	87 95       	ror	r24
 5ee:	97 f9       	bld	r25, 7
 5f0:	08 95       	ret

000005f2 <__fp_split3>:
 5f2:	57 fd       	sbrc	r21, 7
 5f4:	90 58       	subi	r25, 0x80	; 128
 5f6:	44 0f       	add	r20, r20
 5f8:	55 1f       	adc	r21, r21
 5fa:	59 f0       	breq	.+22     	; 0x612 <__fp_splitA+0x10>
 5fc:	5f 3f       	cpi	r21, 0xFF	; 255
 5fe:	71 f0       	breq	.+28     	; 0x61c <__fp_splitA+0x1a>
 600:	47 95       	ror	r20

00000602 <__fp_splitA>:
 602:	88 0f       	add	r24, r24
 604:	97 fb       	bst	r25, 7
 606:	99 1f       	adc	r25, r25
 608:	61 f0       	breq	.+24     	; 0x622 <__fp_splitA+0x20>
 60a:	9f 3f       	cpi	r25, 0xFF	; 255
 60c:	79 f0       	breq	.+30     	; 0x62c <__fp_splitA+0x2a>
 60e:	87 95       	ror	r24
 610:	08 95       	ret
 612:	12 16       	cp	r1, r18
 614:	13 06       	cpc	r1, r19
 616:	14 06       	cpc	r1, r20
 618:	55 1f       	adc	r21, r21
 61a:	f2 cf       	rjmp	.-28     	; 0x600 <__fp_split3+0xe>
 61c:	46 95       	lsr	r20
 61e:	f1 df       	rcall	.-30     	; 0x602 <__fp_splitA>
 620:	08 c0       	rjmp	.+16     	; 0x632 <__fp_splitA+0x30>
 622:	16 16       	cp	r1, r22
 624:	17 06       	cpc	r1, r23
 626:	18 06       	cpc	r1, r24
 628:	99 1f       	adc	r25, r25
 62a:	f1 cf       	rjmp	.-30     	; 0x60e <__fp_splitA+0xc>
 62c:	86 95       	lsr	r24
 62e:	71 05       	cpc	r23, r1
 630:	61 05       	cpc	r22, r1
 632:	08 94       	sec
 634:	08 95       	ret

00000636 <__fp_zero>:
 636:	e8 94       	clt

00000638 <__fp_szero>:
 638:	bb 27       	eor	r27, r27
 63a:	66 27       	eor	r22, r22
 63c:	77 27       	eor	r23, r23
 63e:	cb 01       	movw	r24, r22
 640:	97 f9       	bld	r25, 7
 642:	08 95       	ret

00000644 <__mulsf3>:
 644:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3x>
 648:	0c 94 f3 03 	jmp	0x7e6	; 0x7e6 <__fp_round>
 64c:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__fp_pscA>
 650:	38 f0       	brcs	.+14     	; 0x660 <__mulsf3+0x1c>
 652:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fp_pscB>
 656:	20 f0       	brcs	.+8      	; 0x660 <__mulsf3+0x1c>
 658:	95 23       	and	r25, r21
 65a:	11 f0       	breq	.+4      	; 0x660 <__mulsf3+0x1c>
 65c:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_inf>
 660:	0c 94 e2 03 	jmp	0x7c4	; 0x7c4 <__fp_nan>
 664:	11 24       	eor	r1, r1
 666:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_szero>

0000066a <__mulsf3x>:
 66a:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_split3>
 66e:	70 f3       	brcs	.-36     	; 0x64c <__mulsf3+0x8>

00000670 <__mulsf3_pse>:
 670:	95 9f       	mul	r25, r21
 672:	c1 f3       	breq	.-16     	; 0x664 <__mulsf3+0x20>
 674:	95 0f       	add	r25, r21
 676:	50 e0       	ldi	r21, 0x00	; 0
 678:	55 1f       	adc	r21, r21
 67a:	62 9f       	mul	r22, r18
 67c:	f0 01       	movw	r30, r0
 67e:	72 9f       	mul	r23, r18
 680:	bb 27       	eor	r27, r27
 682:	f0 0d       	add	r31, r0
 684:	b1 1d       	adc	r27, r1
 686:	63 9f       	mul	r22, r19
 688:	aa 27       	eor	r26, r26
 68a:	f0 0d       	add	r31, r0
 68c:	b1 1d       	adc	r27, r1
 68e:	aa 1f       	adc	r26, r26
 690:	64 9f       	mul	r22, r20
 692:	66 27       	eor	r22, r22
 694:	b0 0d       	add	r27, r0
 696:	a1 1d       	adc	r26, r1
 698:	66 1f       	adc	r22, r22
 69a:	82 9f       	mul	r24, r18
 69c:	22 27       	eor	r18, r18
 69e:	b0 0d       	add	r27, r0
 6a0:	a1 1d       	adc	r26, r1
 6a2:	62 1f       	adc	r22, r18
 6a4:	73 9f       	mul	r23, r19
 6a6:	b0 0d       	add	r27, r0
 6a8:	a1 1d       	adc	r26, r1
 6aa:	62 1f       	adc	r22, r18
 6ac:	83 9f       	mul	r24, r19
 6ae:	a0 0d       	add	r26, r0
 6b0:	61 1d       	adc	r22, r1
 6b2:	22 1f       	adc	r18, r18
 6b4:	74 9f       	mul	r23, r20
 6b6:	33 27       	eor	r19, r19
 6b8:	a0 0d       	add	r26, r0
 6ba:	61 1d       	adc	r22, r1
 6bc:	23 1f       	adc	r18, r19
 6be:	84 9f       	mul	r24, r20
 6c0:	60 0d       	add	r22, r0
 6c2:	21 1d       	adc	r18, r1
 6c4:	82 2f       	mov	r24, r18
 6c6:	76 2f       	mov	r23, r22
 6c8:	6a 2f       	mov	r22, r26
 6ca:	11 24       	eor	r1, r1
 6cc:	9f 57       	subi	r25, 0x7F	; 127
 6ce:	50 40       	sbci	r21, 0x00	; 0
 6d0:	9a f0       	brmi	.+38     	; 0x6f8 <__mulsf3_pse+0x88>
 6d2:	f1 f0       	breq	.+60     	; 0x710 <__mulsf3_pse+0xa0>
 6d4:	88 23       	and	r24, r24
 6d6:	4a f0       	brmi	.+18     	; 0x6ea <__mulsf3_pse+0x7a>
 6d8:	ee 0f       	add	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	bb 1f       	adc	r27, r27
 6de:	66 1f       	adc	r22, r22
 6e0:	77 1f       	adc	r23, r23
 6e2:	88 1f       	adc	r24, r24
 6e4:	91 50       	subi	r25, 0x01	; 1
 6e6:	50 40       	sbci	r21, 0x00	; 0
 6e8:	a9 f7       	brne	.-22     	; 0x6d4 <__mulsf3_pse+0x64>
 6ea:	9e 3f       	cpi	r25, 0xFE	; 254
 6ec:	51 05       	cpc	r21, r1
 6ee:	80 f0       	brcs	.+32     	; 0x710 <__mulsf3_pse+0xa0>
 6f0:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_inf>
 6f4:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_szero>
 6f8:	5f 3f       	cpi	r21, 0xFF	; 255
 6fa:	e4 f3       	brlt	.-8      	; 0x6f4 <__mulsf3_pse+0x84>
 6fc:	98 3e       	cpi	r25, 0xE8	; 232
 6fe:	d4 f3       	brlt	.-12     	; 0x6f4 <__mulsf3_pse+0x84>
 700:	86 95       	lsr	r24
 702:	77 95       	ror	r23
 704:	67 95       	ror	r22
 706:	b7 95       	ror	r27
 708:	f7 95       	ror	r31
 70a:	e7 95       	ror	r30
 70c:	9f 5f       	subi	r25, 0xFF	; 255
 70e:	c1 f7       	brne	.-16     	; 0x700 <__mulsf3_pse+0x90>
 710:	fe 2b       	or	r31, r30
 712:	88 0f       	add	r24, r24
 714:	91 1d       	adc	r25, r1
 716:	96 95       	lsr	r25
 718:	87 95       	ror	r24
 71a:	97 f9       	bld	r25, 7
 71c:	08 95       	ret

0000071e <round>:
 71e:	0e 94 01 03 	call	0x602	; 0x602 <__fp_splitA>
 722:	e8 f0       	brcs	.+58     	; 0x75e <round+0x40>
 724:	9e 37       	cpi	r25, 0x7E	; 126
 726:	e8 f0       	brcs	.+58     	; 0x762 <round+0x44>
 728:	96 39       	cpi	r25, 0x96	; 150
 72a:	b8 f4       	brcc	.+46     	; 0x75a <round+0x3c>
 72c:	9e 38       	cpi	r25, 0x8E	; 142
 72e:	48 f4       	brcc	.+18     	; 0x742 <round+0x24>
 730:	67 2f       	mov	r22, r23
 732:	78 2f       	mov	r23, r24
 734:	88 27       	eor	r24, r24
 736:	98 5f       	subi	r25, 0xF8	; 248
 738:	f9 cf       	rjmp	.-14     	; 0x72c <round+0xe>
 73a:	86 95       	lsr	r24
 73c:	77 95       	ror	r23
 73e:	67 95       	ror	r22
 740:	93 95       	inc	r25
 742:	95 39       	cpi	r25, 0x95	; 149
 744:	d0 f3       	brcs	.-12     	; 0x73a <round+0x1c>
 746:	b6 2f       	mov	r27, r22
 748:	b1 70       	andi	r27, 0x01	; 1
 74a:	6b 0f       	add	r22, r27
 74c:	71 1d       	adc	r23, r1
 74e:	81 1d       	adc	r24, r1
 750:	20 f4       	brcc	.+8      	; 0x75a <round+0x3c>
 752:	87 95       	ror	r24
 754:	77 95       	ror	r23
 756:	67 95       	ror	r22
 758:	93 95       	inc	r25
 75a:	0c 94 b9 03 	jmp	0x772	; 0x772 <__fp_mintl>
 75e:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__fp_mpack>
 762:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_szero>

00000766 <__fp_inf>:
 766:	97 f9       	bld	r25, 7
 768:	9f 67       	ori	r25, 0x7F	; 127
 76a:	80 e8       	ldi	r24, 0x80	; 128
 76c:	70 e0       	ldi	r23, 0x00	; 0
 76e:	60 e0       	ldi	r22, 0x00	; 0
 770:	08 95       	ret

00000772 <__fp_mintl>:
 772:	88 23       	and	r24, r24
 774:	71 f4       	brne	.+28     	; 0x792 <__fp_mintl+0x20>
 776:	77 23       	and	r23, r23
 778:	21 f0       	breq	.+8      	; 0x782 <__fp_mintl+0x10>
 77a:	98 50       	subi	r25, 0x08	; 8
 77c:	87 2b       	or	r24, r23
 77e:	76 2f       	mov	r23, r22
 780:	07 c0       	rjmp	.+14     	; 0x790 <__fp_mintl+0x1e>
 782:	66 23       	and	r22, r22
 784:	11 f4       	brne	.+4      	; 0x78a <__fp_mintl+0x18>
 786:	99 27       	eor	r25, r25
 788:	0d c0       	rjmp	.+26     	; 0x7a4 <__fp_mintl+0x32>
 78a:	90 51       	subi	r25, 0x10	; 16
 78c:	86 2b       	or	r24, r22
 78e:	70 e0       	ldi	r23, 0x00	; 0
 790:	60 e0       	ldi	r22, 0x00	; 0
 792:	2a f0       	brmi	.+10     	; 0x79e <__fp_mintl+0x2c>
 794:	9a 95       	dec	r25
 796:	66 0f       	add	r22, r22
 798:	77 1f       	adc	r23, r23
 79a:	88 1f       	adc	r24, r24
 79c:	da f7       	brpl	.-10     	; 0x794 <__fp_mintl+0x22>
 79e:	88 0f       	add	r24, r24
 7a0:	96 95       	lsr	r25
 7a2:	87 95       	ror	r24
 7a4:	97 f9       	bld	r25, 7
 7a6:	08 95       	ret

000007a8 <__fp_mpack>:
 7a8:	9f 3f       	cpi	r25, 0xFF	; 255
 7aa:	31 f0       	breq	.+12     	; 0x7b8 <__fp_mpack_finite+0xc>

000007ac <__fp_mpack_finite>:
 7ac:	91 50       	subi	r25, 0x01	; 1
 7ae:	20 f4       	brcc	.+8      	; 0x7b8 <__fp_mpack_finite+0xc>
 7b0:	87 95       	ror	r24
 7b2:	77 95       	ror	r23
 7b4:	67 95       	ror	r22
 7b6:	b7 95       	ror	r27
 7b8:	88 0f       	add	r24, r24
 7ba:	91 1d       	adc	r25, r1
 7bc:	96 95       	lsr	r25
 7be:	87 95       	ror	r24
 7c0:	97 f9       	bld	r25, 7
 7c2:	08 95       	ret

000007c4 <__fp_nan>:
 7c4:	9f ef       	ldi	r25, 0xFF	; 255
 7c6:	80 ec       	ldi	r24, 0xC0	; 192
 7c8:	08 95       	ret

000007ca <__fp_pscA>:
 7ca:	00 24       	eor	r0, r0
 7cc:	0a 94       	dec	r0
 7ce:	16 16       	cp	r1, r22
 7d0:	17 06       	cpc	r1, r23
 7d2:	18 06       	cpc	r1, r24
 7d4:	09 06       	cpc	r0, r25
 7d6:	08 95       	ret

000007d8 <__fp_pscB>:
 7d8:	00 24       	eor	r0, r0
 7da:	0a 94       	dec	r0
 7dc:	12 16       	cp	r1, r18
 7de:	13 06       	cpc	r1, r19
 7e0:	14 06       	cpc	r1, r20
 7e2:	05 06       	cpc	r0, r21
 7e4:	08 95       	ret

000007e6 <__fp_round>:
 7e6:	09 2e       	mov	r0, r25
 7e8:	03 94       	inc	r0
 7ea:	00 0c       	add	r0, r0
 7ec:	11 f4       	brne	.+4      	; 0x7f2 <__fp_round+0xc>
 7ee:	88 23       	and	r24, r24
 7f0:	52 f0       	brmi	.+20     	; 0x806 <__fp_round+0x20>
 7f2:	bb 0f       	add	r27, r27
 7f4:	40 f4       	brcc	.+16     	; 0x806 <__fp_round+0x20>
 7f6:	bf 2b       	or	r27, r31
 7f8:	11 f4       	brne	.+4      	; 0x7fe <__fp_round+0x18>
 7fa:	60 ff       	sbrs	r22, 0
 7fc:	04 c0       	rjmp	.+8      	; 0x806 <__fp_round+0x20>
 7fe:	6f 5f       	subi	r22, 0xFF	; 255
 800:	7f 4f       	sbci	r23, 0xFF	; 255
 802:	8f 4f       	sbci	r24, 0xFF	; 255
 804:	9f 4f       	sbci	r25, 0xFF	; 255
 806:	08 95       	ret

00000808 <__umulhisi3>:
 808:	a2 9f       	mul	r26, r18
 80a:	b0 01       	movw	r22, r0
 80c:	b3 9f       	mul	r27, r19
 80e:	c0 01       	movw	r24, r0
 810:	a3 9f       	mul	r26, r19
 812:	70 0d       	add	r23, r0
 814:	81 1d       	adc	r24, r1
 816:	11 24       	eor	r1, r1
 818:	91 1d       	adc	r25, r1
 81a:	b2 9f       	mul	r27, r18
 81c:	70 0d       	add	r23, r0
 81e:	81 1d       	adc	r24, r1
 820:	11 24       	eor	r1, r1
 822:	91 1d       	adc	r25, r1
 824:	08 95       	ret

00000826 <snprintf>:
 826:	ae e0       	ldi	r26, 0x0E	; 14
 828:	b0 e0       	ldi	r27, 0x00	; 0
 82a:	e9 e1       	ldi	r30, 0x19	; 25
 82c:	f4 e0       	ldi	r31, 0x04	; 4
 82e:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__prologue_saves__+0x1c>
 832:	0d 89       	ldd	r16, Y+21	; 0x15
 834:	1e 89       	ldd	r17, Y+22	; 0x16
 836:	8f 89       	ldd	r24, Y+23	; 0x17
 838:	98 8d       	ldd	r25, Y+24	; 0x18
 83a:	26 e0       	ldi	r18, 0x06	; 6
 83c:	2c 83       	std	Y+4, r18	; 0x04
 83e:	1a 83       	std	Y+2, r17	; 0x02
 840:	09 83       	std	Y+1, r16	; 0x01
 842:	97 ff       	sbrs	r25, 7
 844:	02 c0       	rjmp	.+4      	; 0x84a <snprintf+0x24>
 846:	80 e0       	ldi	r24, 0x00	; 0
 848:	90 e8       	ldi	r25, 0x80	; 128
 84a:	01 97       	sbiw	r24, 0x01	; 1
 84c:	9e 83       	std	Y+6, r25	; 0x06
 84e:	8d 83       	std	Y+5, r24	; 0x05
 850:	ae 01       	movw	r20, r28
 852:	45 5e       	subi	r20, 0xE5	; 229
 854:	5f 4f       	sbci	r21, 0xFF	; 255
 856:	69 8d       	ldd	r22, Y+25	; 0x19
 858:	7a 8d       	ldd	r23, Y+26	; 0x1a
 85a:	ce 01       	movw	r24, r28
 85c:	01 96       	adiw	r24, 0x01	; 1
 85e:	0e 94 43 04 	call	0x886	; 0x886 <vfprintf>
 862:	4d 81       	ldd	r20, Y+5	; 0x05
 864:	5e 81       	ldd	r21, Y+6	; 0x06
 866:	57 fd       	sbrc	r21, 7
 868:	0a c0       	rjmp	.+20     	; 0x87e <snprintf+0x58>
 86a:	2f 81       	ldd	r18, Y+7	; 0x07
 86c:	38 85       	ldd	r19, Y+8	; 0x08
 86e:	42 17       	cp	r20, r18
 870:	53 07       	cpc	r21, r19
 872:	0c f4       	brge	.+2      	; 0x876 <snprintf+0x50>
 874:	9a 01       	movw	r18, r20
 876:	f8 01       	movw	r30, r16
 878:	e2 0f       	add	r30, r18
 87a:	f3 1f       	adc	r31, r19
 87c:	10 82       	st	Z, r1
 87e:	2e 96       	adiw	r28, 0x0e	; 14
 880:	e4 e0       	ldi	r30, 0x04	; 4
 882:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__epilogue_restores__+0x1c>

00000886 <vfprintf>:
 886:	ab e0       	ldi	r26, 0x0B	; 11
 888:	b0 e0       	ldi	r27, 0x00	; 0
 88a:	e9 e4       	ldi	r30, 0x49	; 73
 88c:	f4 e0       	ldi	r31, 0x04	; 4
 88e:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__prologue_saves__>
 892:	6c 01       	movw	r12, r24
 894:	7b 01       	movw	r14, r22
 896:	8a 01       	movw	r16, r20
 898:	fc 01       	movw	r30, r24
 89a:	17 82       	std	Z+7, r1	; 0x07
 89c:	16 82       	std	Z+6, r1	; 0x06
 89e:	83 81       	ldd	r24, Z+3	; 0x03
 8a0:	81 ff       	sbrs	r24, 1
 8a2:	cc c1       	rjmp	.+920    	; 0xc3c <__stack+0x33d>
 8a4:	ce 01       	movw	r24, r28
 8a6:	01 96       	adiw	r24, 0x01	; 1
 8a8:	3c 01       	movw	r6, r24
 8aa:	f6 01       	movw	r30, r12
 8ac:	93 81       	ldd	r25, Z+3	; 0x03
 8ae:	f7 01       	movw	r30, r14
 8b0:	93 fd       	sbrc	r25, 3
 8b2:	85 91       	lpm	r24, Z+
 8b4:	93 ff       	sbrs	r25, 3
 8b6:	81 91       	ld	r24, Z+
 8b8:	7f 01       	movw	r14, r30
 8ba:	88 23       	and	r24, r24
 8bc:	09 f4       	brne	.+2      	; 0x8c0 <vfprintf+0x3a>
 8be:	ba c1       	rjmp	.+884    	; 0xc34 <__stack+0x335>
 8c0:	85 32       	cpi	r24, 0x25	; 37
 8c2:	39 f4       	brne	.+14     	; 0x8d2 <vfprintf+0x4c>
 8c4:	93 fd       	sbrc	r25, 3
 8c6:	85 91       	lpm	r24, Z+
 8c8:	93 ff       	sbrs	r25, 3
 8ca:	81 91       	ld	r24, Z+
 8cc:	7f 01       	movw	r14, r30
 8ce:	85 32       	cpi	r24, 0x25	; 37
 8d0:	29 f4       	brne	.+10     	; 0x8dc <vfprintf+0x56>
 8d2:	b6 01       	movw	r22, r12
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 8da:	e7 cf       	rjmp	.-50     	; 0x8aa <vfprintf+0x24>
 8dc:	91 2c       	mov	r9, r1
 8de:	21 2c       	mov	r2, r1
 8e0:	31 2c       	mov	r3, r1
 8e2:	ff e1       	ldi	r31, 0x1F	; 31
 8e4:	f3 15       	cp	r31, r3
 8e6:	d8 f0       	brcs	.+54     	; 0x91e <__stack+0x1f>
 8e8:	8b 32       	cpi	r24, 0x2B	; 43
 8ea:	79 f0       	breq	.+30     	; 0x90a <__stack+0xb>
 8ec:	38 f4       	brcc	.+14     	; 0x8fc <vfprintf+0x76>
 8ee:	80 32       	cpi	r24, 0x20	; 32
 8f0:	79 f0       	breq	.+30     	; 0x910 <__stack+0x11>
 8f2:	83 32       	cpi	r24, 0x23	; 35
 8f4:	a1 f4       	brne	.+40     	; 0x91e <__stack+0x1f>
 8f6:	23 2d       	mov	r18, r3
 8f8:	20 61       	ori	r18, 0x10	; 16
 8fa:	1d c0       	rjmp	.+58     	; 0x936 <__stack+0x37>
 8fc:	8d 32       	cpi	r24, 0x2D	; 45
 8fe:	61 f0       	breq	.+24     	; 0x918 <__stack+0x19>
 900:	80 33       	cpi	r24, 0x30	; 48
 902:	69 f4       	brne	.+26     	; 0x91e <__stack+0x1f>
 904:	23 2d       	mov	r18, r3
 906:	21 60       	ori	r18, 0x01	; 1
 908:	16 c0       	rjmp	.+44     	; 0x936 <__stack+0x37>
 90a:	83 2d       	mov	r24, r3
 90c:	82 60       	ori	r24, 0x02	; 2
 90e:	38 2e       	mov	r3, r24
 910:	e3 2d       	mov	r30, r3
 912:	e4 60       	ori	r30, 0x04	; 4
 914:	3e 2e       	mov	r3, r30
 916:	2a c0       	rjmp	.+84     	; 0x96c <__stack+0x6d>
 918:	f3 2d       	mov	r31, r3
 91a:	f8 60       	ori	r31, 0x08	; 8
 91c:	1d c0       	rjmp	.+58     	; 0x958 <__stack+0x59>
 91e:	37 fc       	sbrc	r3, 7
 920:	2d c0       	rjmp	.+90     	; 0x97c <__stack+0x7d>
 922:	20 ed       	ldi	r18, 0xD0	; 208
 924:	28 0f       	add	r18, r24
 926:	2a 30       	cpi	r18, 0x0A	; 10
 928:	40 f0       	brcs	.+16     	; 0x93a <__stack+0x3b>
 92a:	8e 32       	cpi	r24, 0x2E	; 46
 92c:	b9 f4       	brne	.+46     	; 0x95c <__stack+0x5d>
 92e:	36 fc       	sbrc	r3, 6
 930:	81 c1       	rjmp	.+770    	; 0xc34 <__stack+0x335>
 932:	23 2d       	mov	r18, r3
 934:	20 64       	ori	r18, 0x40	; 64
 936:	32 2e       	mov	r3, r18
 938:	19 c0       	rjmp	.+50     	; 0x96c <__stack+0x6d>
 93a:	36 fe       	sbrs	r3, 6
 93c:	06 c0       	rjmp	.+12     	; 0x94a <__stack+0x4b>
 93e:	8a e0       	ldi	r24, 0x0A	; 10
 940:	98 9e       	mul	r9, r24
 942:	20 0d       	add	r18, r0
 944:	11 24       	eor	r1, r1
 946:	92 2e       	mov	r9, r18
 948:	11 c0       	rjmp	.+34     	; 0x96c <__stack+0x6d>
 94a:	ea e0       	ldi	r30, 0x0A	; 10
 94c:	2e 9e       	mul	r2, r30
 94e:	20 0d       	add	r18, r0
 950:	11 24       	eor	r1, r1
 952:	22 2e       	mov	r2, r18
 954:	f3 2d       	mov	r31, r3
 956:	f0 62       	ori	r31, 0x20	; 32
 958:	3f 2e       	mov	r3, r31
 95a:	08 c0       	rjmp	.+16     	; 0x96c <__stack+0x6d>
 95c:	8c 36       	cpi	r24, 0x6C	; 108
 95e:	21 f4       	brne	.+8      	; 0x968 <__stack+0x69>
 960:	83 2d       	mov	r24, r3
 962:	80 68       	ori	r24, 0x80	; 128
 964:	38 2e       	mov	r3, r24
 966:	02 c0       	rjmp	.+4      	; 0x96c <__stack+0x6d>
 968:	88 36       	cpi	r24, 0x68	; 104
 96a:	41 f4       	brne	.+16     	; 0x97c <__stack+0x7d>
 96c:	f7 01       	movw	r30, r14
 96e:	93 fd       	sbrc	r25, 3
 970:	85 91       	lpm	r24, Z+
 972:	93 ff       	sbrs	r25, 3
 974:	81 91       	ld	r24, Z+
 976:	7f 01       	movw	r14, r30
 978:	81 11       	cpse	r24, r1
 97a:	b3 cf       	rjmp	.-154    	; 0x8e2 <vfprintf+0x5c>
 97c:	98 2f       	mov	r25, r24
 97e:	9f 7d       	andi	r25, 0xDF	; 223
 980:	95 54       	subi	r25, 0x45	; 69
 982:	93 30       	cpi	r25, 0x03	; 3
 984:	28 f4       	brcc	.+10     	; 0x990 <__stack+0x91>
 986:	0c 5f       	subi	r16, 0xFC	; 252
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	9f e3       	ldi	r25, 0x3F	; 63
 98c:	99 83       	std	Y+1, r25	; 0x01
 98e:	0d c0       	rjmp	.+26     	; 0x9aa <__stack+0xab>
 990:	83 36       	cpi	r24, 0x63	; 99
 992:	31 f0       	breq	.+12     	; 0x9a0 <__stack+0xa1>
 994:	83 37       	cpi	r24, 0x73	; 115
 996:	71 f0       	breq	.+28     	; 0x9b4 <__stack+0xb5>
 998:	83 35       	cpi	r24, 0x53	; 83
 99a:	09 f0       	breq	.+2      	; 0x99e <__stack+0x9f>
 99c:	59 c0       	rjmp	.+178    	; 0xa50 <__stack+0x151>
 99e:	21 c0       	rjmp	.+66     	; 0x9e2 <__stack+0xe3>
 9a0:	f8 01       	movw	r30, r16
 9a2:	80 81       	ld	r24, Z
 9a4:	89 83       	std	Y+1, r24	; 0x01
 9a6:	0e 5f       	subi	r16, 0xFE	; 254
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	88 24       	eor	r8, r8
 9ac:	83 94       	inc	r8
 9ae:	91 2c       	mov	r9, r1
 9b0:	53 01       	movw	r10, r6
 9b2:	13 c0       	rjmp	.+38     	; 0x9da <__stack+0xdb>
 9b4:	28 01       	movw	r4, r16
 9b6:	f2 e0       	ldi	r31, 0x02	; 2
 9b8:	4f 0e       	add	r4, r31
 9ba:	51 1c       	adc	r5, r1
 9bc:	f8 01       	movw	r30, r16
 9be:	a0 80       	ld	r10, Z
 9c0:	b1 80       	ldd	r11, Z+1	; 0x01
 9c2:	36 fe       	sbrs	r3, 6
 9c4:	03 c0       	rjmp	.+6      	; 0x9cc <__stack+0xcd>
 9c6:	69 2d       	mov	r22, r9
 9c8:	70 e0       	ldi	r23, 0x00	; 0
 9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <__stack+0xd1>
 9cc:	6f ef       	ldi	r22, 0xFF	; 255
 9ce:	7f ef       	ldi	r23, 0xFF	; 255
 9d0:	c5 01       	movw	r24, r10
 9d2:	0e 94 2f 06 	call	0xc5e	; 0xc5e <strnlen>
 9d6:	4c 01       	movw	r8, r24
 9d8:	82 01       	movw	r16, r4
 9da:	f3 2d       	mov	r31, r3
 9dc:	ff 77       	andi	r31, 0x7F	; 127
 9de:	3f 2e       	mov	r3, r31
 9e0:	16 c0       	rjmp	.+44     	; 0xa0e <__stack+0x10f>
 9e2:	28 01       	movw	r4, r16
 9e4:	22 e0       	ldi	r18, 0x02	; 2
 9e6:	42 0e       	add	r4, r18
 9e8:	51 1c       	adc	r5, r1
 9ea:	f8 01       	movw	r30, r16
 9ec:	a0 80       	ld	r10, Z
 9ee:	b1 80       	ldd	r11, Z+1	; 0x01
 9f0:	36 fe       	sbrs	r3, 6
 9f2:	03 c0       	rjmp	.+6      	; 0x9fa <__stack+0xfb>
 9f4:	69 2d       	mov	r22, r9
 9f6:	70 e0       	ldi	r23, 0x00	; 0
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__stack+0xff>
 9fa:	6f ef       	ldi	r22, 0xFF	; 255
 9fc:	7f ef       	ldi	r23, 0xFF	; 255
 9fe:	c5 01       	movw	r24, r10
 a00:	0e 94 24 06 	call	0xc48	; 0xc48 <strnlen_P>
 a04:	4c 01       	movw	r8, r24
 a06:	f3 2d       	mov	r31, r3
 a08:	f0 68       	ori	r31, 0x80	; 128
 a0a:	3f 2e       	mov	r3, r31
 a0c:	82 01       	movw	r16, r4
 a0e:	33 fc       	sbrc	r3, 3
 a10:	1b c0       	rjmp	.+54     	; 0xa48 <__stack+0x149>
 a12:	82 2d       	mov	r24, r2
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	88 16       	cp	r8, r24
 a18:	99 06       	cpc	r9, r25
 a1a:	b0 f4       	brcc	.+44     	; 0xa48 <__stack+0x149>
 a1c:	b6 01       	movw	r22, r12
 a1e:	80 e2       	ldi	r24, 0x20	; 32
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 a26:	2a 94       	dec	r2
 a28:	f4 cf       	rjmp	.-24     	; 0xa12 <__stack+0x113>
 a2a:	f5 01       	movw	r30, r10
 a2c:	37 fc       	sbrc	r3, 7
 a2e:	85 91       	lpm	r24, Z+
 a30:	37 fe       	sbrs	r3, 7
 a32:	81 91       	ld	r24, Z+
 a34:	5f 01       	movw	r10, r30
 a36:	b6 01       	movw	r22, r12
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 a3e:	21 10       	cpse	r2, r1
 a40:	2a 94       	dec	r2
 a42:	21 e0       	ldi	r18, 0x01	; 1
 a44:	82 1a       	sub	r8, r18
 a46:	91 08       	sbc	r9, r1
 a48:	81 14       	cp	r8, r1
 a4a:	91 04       	cpc	r9, r1
 a4c:	71 f7       	brne	.-36     	; 0xa2a <__stack+0x12b>
 a4e:	e8 c0       	rjmp	.+464    	; 0xc20 <__stack+0x321>
 a50:	84 36       	cpi	r24, 0x64	; 100
 a52:	11 f0       	breq	.+4      	; 0xa58 <__stack+0x159>
 a54:	89 36       	cpi	r24, 0x69	; 105
 a56:	41 f5       	brne	.+80     	; 0xaa8 <__stack+0x1a9>
 a58:	f8 01       	movw	r30, r16
 a5a:	37 fe       	sbrs	r3, 7
 a5c:	07 c0       	rjmp	.+14     	; 0xa6c <__stack+0x16d>
 a5e:	60 81       	ld	r22, Z
 a60:	71 81       	ldd	r23, Z+1	; 0x01
 a62:	82 81       	ldd	r24, Z+2	; 0x02
 a64:	93 81       	ldd	r25, Z+3	; 0x03
 a66:	0c 5f       	subi	r16, 0xFC	; 252
 a68:	1f 4f       	sbci	r17, 0xFF	; 255
 a6a:	08 c0       	rjmp	.+16     	; 0xa7c <__stack+0x17d>
 a6c:	60 81       	ld	r22, Z
 a6e:	71 81       	ldd	r23, Z+1	; 0x01
 a70:	07 2e       	mov	r0, r23
 a72:	00 0c       	add	r0, r0
 a74:	88 0b       	sbc	r24, r24
 a76:	99 0b       	sbc	r25, r25
 a78:	0e 5f       	subi	r16, 0xFE	; 254
 a7a:	1f 4f       	sbci	r17, 0xFF	; 255
 a7c:	f3 2d       	mov	r31, r3
 a7e:	ff 76       	andi	r31, 0x6F	; 111
 a80:	3f 2e       	mov	r3, r31
 a82:	97 ff       	sbrs	r25, 7
 a84:	09 c0       	rjmp	.+18     	; 0xa98 <__stack+0x199>
 a86:	90 95       	com	r25
 a88:	80 95       	com	r24
 a8a:	70 95       	com	r23
 a8c:	61 95       	neg	r22
 a8e:	7f 4f       	sbci	r23, 0xFF	; 255
 a90:	8f 4f       	sbci	r24, 0xFF	; 255
 a92:	9f 4f       	sbci	r25, 0xFF	; 255
 a94:	f0 68       	ori	r31, 0x80	; 128
 a96:	3f 2e       	mov	r3, r31
 a98:	2a e0       	ldi	r18, 0x0A	; 10
 a9a:	30 e0       	ldi	r19, 0x00	; 0
 a9c:	a3 01       	movw	r20, r6
 a9e:	0e 94 76 06 	call	0xcec	; 0xcec <__ultoa_invert>
 aa2:	88 2e       	mov	r8, r24
 aa4:	86 18       	sub	r8, r6
 aa6:	45 c0       	rjmp	.+138    	; 0xb32 <__stack+0x233>
 aa8:	85 37       	cpi	r24, 0x75	; 117
 aaa:	31 f4       	brne	.+12     	; 0xab8 <__stack+0x1b9>
 aac:	23 2d       	mov	r18, r3
 aae:	2f 7e       	andi	r18, 0xEF	; 239
 ab0:	b2 2e       	mov	r11, r18
 ab2:	2a e0       	ldi	r18, 0x0A	; 10
 ab4:	30 e0       	ldi	r19, 0x00	; 0
 ab6:	25 c0       	rjmp	.+74     	; 0xb02 <__stack+0x203>
 ab8:	93 2d       	mov	r25, r3
 aba:	99 7f       	andi	r25, 0xF9	; 249
 abc:	b9 2e       	mov	r11, r25
 abe:	8f 36       	cpi	r24, 0x6F	; 111
 ac0:	c1 f0       	breq	.+48     	; 0xaf2 <__stack+0x1f3>
 ac2:	18 f4       	brcc	.+6      	; 0xaca <__stack+0x1cb>
 ac4:	88 35       	cpi	r24, 0x58	; 88
 ac6:	79 f0       	breq	.+30     	; 0xae6 <__stack+0x1e7>
 ac8:	b5 c0       	rjmp	.+362    	; 0xc34 <__stack+0x335>
 aca:	80 37       	cpi	r24, 0x70	; 112
 acc:	19 f0       	breq	.+6      	; 0xad4 <__stack+0x1d5>
 ace:	88 37       	cpi	r24, 0x78	; 120
 ad0:	21 f0       	breq	.+8      	; 0xada <__stack+0x1db>
 ad2:	b0 c0       	rjmp	.+352    	; 0xc34 <__stack+0x335>
 ad4:	e9 2f       	mov	r30, r25
 ad6:	e0 61       	ori	r30, 0x10	; 16
 ad8:	be 2e       	mov	r11, r30
 ada:	b4 fe       	sbrs	r11, 4
 adc:	0d c0       	rjmp	.+26     	; 0xaf8 <__stack+0x1f9>
 ade:	fb 2d       	mov	r31, r11
 ae0:	f4 60       	ori	r31, 0x04	; 4
 ae2:	bf 2e       	mov	r11, r31
 ae4:	09 c0       	rjmp	.+18     	; 0xaf8 <__stack+0x1f9>
 ae6:	34 fe       	sbrs	r3, 4
 ae8:	0a c0       	rjmp	.+20     	; 0xafe <__stack+0x1ff>
 aea:	29 2f       	mov	r18, r25
 aec:	26 60       	ori	r18, 0x06	; 6
 aee:	b2 2e       	mov	r11, r18
 af0:	06 c0       	rjmp	.+12     	; 0xafe <__stack+0x1ff>
 af2:	28 e0       	ldi	r18, 0x08	; 8
 af4:	30 e0       	ldi	r19, 0x00	; 0
 af6:	05 c0       	rjmp	.+10     	; 0xb02 <__stack+0x203>
 af8:	20 e1       	ldi	r18, 0x10	; 16
 afa:	30 e0       	ldi	r19, 0x00	; 0
 afc:	02 c0       	rjmp	.+4      	; 0xb02 <__stack+0x203>
 afe:	20 e1       	ldi	r18, 0x10	; 16
 b00:	32 e0       	ldi	r19, 0x02	; 2
 b02:	f8 01       	movw	r30, r16
 b04:	b7 fe       	sbrs	r11, 7
 b06:	07 c0       	rjmp	.+14     	; 0xb16 <__stack+0x217>
 b08:	60 81       	ld	r22, Z
 b0a:	71 81       	ldd	r23, Z+1	; 0x01
 b0c:	82 81       	ldd	r24, Z+2	; 0x02
 b0e:	93 81       	ldd	r25, Z+3	; 0x03
 b10:	0c 5f       	subi	r16, 0xFC	; 252
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	06 c0       	rjmp	.+12     	; 0xb22 <__stack+0x223>
 b16:	60 81       	ld	r22, Z
 b18:	71 81       	ldd	r23, Z+1	; 0x01
 b1a:	80 e0       	ldi	r24, 0x00	; 0
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 5f       	subi	r16, 0xFE	; 254
 b20:	1f 4f       	sbci	r17, 0xFF	; 255
 b22:	a3 01       	movw	r20, r6
 b24:	0e 94 76 06 	call	0xcec	; 0xcec <__ultoa_invert>
 b28:	88 2e       	mov	r8, r24
 b2a:	86 18       	sub	r8, r6
 b2c:	fb 2d       	mov	r31, r11
 b2e:	ff 77       	andi	r31, 0x7F	; 127
 b30:	3f 2e       	mov	r3, r31
 b32:	36 fe       	sbrs	r3, 6
 b34:	0d c0       	rjmp	.+26     	; 0xb50 <__stack+0x251>
 b36:	23 2d       	mov	r18, r3
 b38:	2e 7f       	andi	r18, 0xFE	; 254
 b3a:	a2 2e       	mov	r10, r18
 b3c:	89 14       	cp	r8, r9
 b3e:	58 f4       	brcc	.+22     	; 0xb56 <__stack+0x257>
 b40:	34 fe       	sbrs	r3, 4
 b42:	0b c0       	rjmp	.+22     	; 0xb5a <__stack+0x25b>
 b44:	32 fc       	sbrc	r3, 2
 b46:	09 c0       	rjmp	.+18     	; 0xb5a <__stack+0x25b>
 b48:	83 2d       	mov	r24, r3
 b4a:	8e 7e       	andi	r24, 0xEE	; 238
 b4c:	a8 2e       	mov	r10, r24
 b4e:	05 c0       	rjmp	.+10     	; 0xb5a <__stack+0x25b>
 b50:	b8 2c       	mov	r11, r8
 b52:	a3 2c       	mov	r10, r3
 b54:	03 c0       	rjmp	.+6      	; 0xb5c <__stack+0x25d>
 b56:	b8 2c       	mov	r11, r8
 b58:	01 c0       	rjmp	.+2      	; 0xb5c <__stack+0x25d>
 b5a:	b9 2c       	mov	r11, r9
 b5c:	a4 fe       	sbrs	r10, 4
 b5e:	0f c0       	rjmp	.+30     	; 0xb7e <__stack+0x27f>
 b60:	fe 01       	movw	r30, r28
 b62:	e8 0d       	add	r30, r8
 b64:	f1 1d       	adc	r31, r1
 b66:	80 81       	ld	r24, Z
 b68:	80 33       	cpi	r24, 0x30	; 48
 b6a:	21 f4       	brne	.+8      	; 0xb74 <__stack+0x275>
 b6c:	9a 2d       	mov	r25, r10
 b6e:	99 7e       	andi	r25, 0xE9	; 233
 b70:	a9 2e       	mov	r10, r25
 b72:	09 c0       	rjmp	.+18     	; 0xb86 <__stack+0x287>
 b74:	a2 fe       	sbrs	r10, 2
 b76:	06 c0       	rjmp	.+12     	; 0xb84 <__stack+0x285>
 b78:	b3 94       	inc	r11
 b7a:	b3 94       	inc	r11
 b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__stack+0x287>
 b7e:	8a 2d       	mov	r24, r10
 b80:	86 78       	andi	r24, 0x86	; 134
 b82:	09 f0       	breq	.+2      	; 0xb86 <__stack+0x287>
 b84:	b3 94       	inc	r11
 b86:	a3 fc       	sbrc	r10, 3
 b88:	11 c0       	rjmp	.+34     	; 0xbac <__stack+0x2ad>
 b8a:	a0 fe       	sbrs	r10, 0
 b8c:	06 c0       	rjmp	.+12     	; 0xb9a <__stack+0x29b>
 b8e:	b2 14       	cp	r11, r2
 b90:	88 f4       	brcc	.+34     	; 0xbb4 <__stack+0x2b5>
 b92:	28 0c       	add	r2, r8
 b94:	92 2c       	mov	r9, r2
 b96:	9b 18       	sub	r9, r11
 b98:	0e c0       	rjmp	.+28     	; 0xbb6 <__stack+0x2b7>
 b9a:	b2 14       	cp	r11, r2
 b9c:	60 f4       	brcc	.+24     	; 0xbb6 <__stack+0x2b7>
 b9e:	b6 01       	movw	r22, r12
 ba0:	80 e2       	ldi	r24, 0x20	; 32
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 ba8:	b3 94       	inc	r11
 baa:	f7 cf       	rjmp	.-18     	; 0xb9a <__stack+0x29b>
 bac:	b2 14       	cp	r11, r2
 bae:	18 f4       	brcc	.+6      	; 0xbb6 <__stack+0x2b7>
 bb0:	2b 18       	sub	r2, r11
 bb2:	02 c0       	rjmp	.+4      	; 0xbb8 <__stack+0x2b9>
 bb4:	98 2c       	mov	r9, r8
 bb6:	21 2c       	mov	r2, r1
 bb8:	a4 fe       	sbrs	r10, 4
 bba:	10 c0       	rjmp	.+32     	; 0xbdc <__stack+0x2dd>
 bbc:	b6 01       	movw	r22, r12
 bbe:	80 e3       	ldi	r24, 0x30	; 48
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 bc6:	a2 fe       	sbrs	r10, 2
 bc8:	17 c0       	rjmp	.+46     	; 0xbf8 <__stack+0x2f9>
 bca:	a1 fc       	sbrc	r10, 1
 bcc:	03 c0       	rjmp	.+6      	; 0xbd4 <__stack+0x2d5>
 bce:	88 e7       	ldi	r24, 0x78	; 120
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <__stack+0x2d9>
 bd4:	88 e5       	ldi	r24, 0x58	; 88
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	b6 01       	movw	r22, r12
 bda:	0c c0       	rjmp	.+24     	; 0xbf4 <__stack+0x2f5>
 bdc:	8a 2d       	mov	r24, r10
 bde:	86 78       	andi	r24, 0x86	; 134
 be0:	59 f0       	breq	.+22     	; 0xbf8 <__stack+0x2f9>
 be2:	a1 fe       	sbrs	r10, 1
 be4:	02 c0       	rjmp	.+4      	; 0xbea <__stack+0x2eb>
 be6:	8b e2       	ldi	r24, 0x2B	; 43
 be8:	01 c0       	rjmp	.+2      	; 0xbec <__stack+0x2ed>
 bea:	80 e2       	ldi	r24, 0x20	; 32
 bec:	a7 fc       	sbrc	r10, 7
 bee:	8d e2       	ldi	r24, 0x2D	; 45
 bf0:	b6 01       	movw	r22, r12
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 bf8:	89 14       	cp	r8, r9
 bfa:	38 f4       	brcc	.+14     	; 0xc0a <__stack+0x30b>
 bfc:	b6 01       	movw	r22, r12
 bfe:	80 e3       	ldi	r24, 0x30	; 48
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 c06:	9a 94       	dec	r9
 c08:	f7 cf       	rjmp	.-18     	; 0xbf8 <__stack+0x2f9>
 c0a:	8a 94       	dec	r8
 c0c:	f3 01       	movw	r30, r6
 c0e:	e8 0d       	add	r30, r8
 c10:	f1 1d       	adc	r31, r1
 c12:	80 81       	ld	r24, Z
 c14:	b6 01       	movw	r22, r12
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 c1c:	81 10       	cpse	r8, r1
 c1e:	f5 cf       	rjmp	.-22     	; 0xc0a <__stack+0x30b>
 c20:	22 20       	and	r2, r2
 c22:	09 f4       	brne	.+2      	; 0xc26 <__stack+0x327>
 c24:	42 ce       	rjmp	.-892    	; 0x8aa <vfprintf+0x24>
 c26:	b6 01       	movw	r22, r12
 c28:	80 e2       	ldi	r24, 0x20	; 32
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 c30:	2a 94       	dec	r2
 c32:	f6 cf       	rjmp	.-20     	; 0xc20 <__stack+0x321>
 c34:	f6 01       	movw	r30, r12
 c36:	86 81       	ldd	r24, Z+6	; 0x06
 c38:	97 81       	ldd	r25, Z+7	; 0x07
 c3a:	02 c0       	rjmp	.+4      	; 0xc40 <__stack+0x341>
 c3c:	8f ef       	ldi	r24, 0xFF	; 255
 c3e:	9f ef       	ldi	r25, 0xFF	; 255
 c40:	2b 96       	adiw	r28, 0x0b	; 11
 c42:	e2 e1       	ldi	r30, 0x12	; 18
 c44:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__epilogue_restores__>

00000c48 <strnlen_P>:
 c48:	fc 01       	movw	r30, r24
 c4a:	05 90       	lpm	r0, Z+
 c4c:	61 50       	subi	r22, 0x01	; 1
 c4e:	70 40       	sbci	r23, 0x00	; 0
 c50:	01 10       	cpse	r0, r1
 c52:	d8 f7       	brcc	.-10     	; 0xc4a <strnlen_P+0x2>
 c54:	80 95       	com	r24
 c56:	90 95       	com	r25
 c58:	8e 0f       	add	r24, r30
 c5a:	9f 1f       	adc	r25, r31
 c5c:	08 95       	ret

00000c5e <strnlen>:
 c5e:	fc 01       	movw	r30, r24
 c60:	61 50       	subi	r22, 0x01	; 1
 c62:	70 40       	sbci	r23, 0x00	; 0
 c64:	01 90       	ld	r0, Z+
 c66:	01 10       	cpse	r0, r1
 c68:	d8 f7       	brcc	.-10     	; 0xc60 <strnlen+0x2>
 c6a:	80 95       	com	r24
 c6c:	90 95       	com	r25
 c6e:	8e 0f       	add	r24, r30
 c70:	9f 1f       	adc	r25, r31
 c72:	08 95       	ret

00000c74 <fputc>:
 c74:	0f 93       	push	r16
 c76:	1f 93       	push	r17
 c78:	cf 93       	push	r28
 c7a:	df 93       	push	r29
 c7c:	fb 01       	movw	r30, r22
 c7e:	23 81       	ldd	r18, Z+3	; 0x03
 c80:	21 fd       	sbrc	r18, 1
 c82:	03 c0       	rjmp	.+6      	; 0xc8a <fputc+0x16>
 c84:	8f ef       	ldi	r24, 0xFF	; 255
 c86:	9f ef       	ldi	r25, 0xFF	; 255
 c88:	2c c0       	rjmp	.+88     	; 0xce2 <fputc+0x6e>
 c8a:	22 ff       	sbrs	r18, 2
 c8c:	16 c0       	rjmp	.+44     	; 0xcba <fputc+0x46>
 c8e:	46 81       	ldd	r20, Z+6	; 0x06
 c90:	57 81       	ldd	r21, Z+7	; 0x07
 c92:	24 81       	ldd	r18, Z+4	; 0x04
 c94:	35 81       	ldd	r19, Z+5	; 0x05
 c96:	42 17       	cp	r20, r18
 c98:	53 07       	cpc	r21, r19
 c9a:	44 f4       	brge	.+16     	; 0xcac <fputc+0x38>
 c9c:	a0 81       	ld	r26, Z
 c9e:	b1 81       	ldd	r27, Z+1	; 0x01
 ca0:	9d 01       	movw	r18, r26
 ca2:	2f 5f       	subi	r18, 0xFF	; 255
 ca4:	3f 4f       	sbci	r19, 0xFF	; 255
 ca6:	31 83       	std	Z+1, r19	; 0x01
 ca8:	20 83       	st	Z, r18
 caa:	8c 93       	st	X, r24
 cac:	26 81       	ldd	r18, Z+6	; 0x06
 cae:	37 81       	ldd	r19, Z+7	; 0x07
 cb0:	2f 5f       	subi	r18, 0xFF	; 255
 cb2:	3f 4f       	sbci	r19, 0xFF	; 255
 cb4:	37 83       	std	Z+7, r19	; 0x07
 cb6:	26 83       	std	Z+6, r18	; 0x06
 cb8:	14 c0       	rjmp	.+40     	; 0xce2 <fputc+0x6e>
 cba:	8b 01       	movw	r16, r22
 cbc:	ec 01       	movw	r28, r24
 cbe:	fb 01       	movw	r30, r22
 cc0:	00 84       	ldd	r0, Z+8	; 0x08
 cc2:	f1 85       	ldd	r31, Z+9	; 0x09
 cc4:	e0 2d       	mov	r30, r0
 cc6:	09 95       	icall
 cc8:	89 2b       	or	r24, r25
 cca:	e1 f6       	brne	.-72     	; 0xc84 <fputc+0x10>
 ccc:	d8 01       	movw	r26, r16
 cce:	16 96       	adiw	r26, 0x06	; 6
 cd0:	8d 91       	ld	r24, X+
 cd2:	9c 91       	ld	r25, X
 cd4:	17 97       	sbiw	r26, 0x07	; 7
 cd6:	01 96       	adiw	r24, 0x01	; 1
 cd8:	17 96       	adiw	r26, 0x07	; 7
 cda:	9c 93       	st	X, r25
 cdc:	8e 93       	st	-X, r24
 cde:	16 97       	sbiw	r26, 0x06	; 6
 ce0:	ce 01       	movw	r24, r28
 ce2:	df 91       	pop	r29
 ce4:	cf 91       	pop	r28
 ce6:	1f 91       	pop	r17
 ce8:	0f 91       	pop	r16
 cea:	08 95       	ret

00000cec <__ultoa_invert>:
 cec:	fa 01       	movw	r30, r20
 cee:	aa 27       	eor	r26, r26
 cf0:	28 30       	cpi	r18, 0x08	; 8
 cf2:	51 f1       	breq	.+84     	; 0xd48 <__ultoa_invert+0x5c>
 cf4:	20 31       	cpi	r18, 0x10	; 16
 cf6:	81 f1       	breq	.+96     	; 0xd58 <__ultoa_invert+0x6c>
 cf8:	e8 94       	clt
 cfa:	6f 93       	push	r22
 cfc:	6e 7f       	andi	r22, 0xFE	; 254
 cfe:	6e 5f       	subi	r22, 0xFE	; 254
 d00:	7f 4f       	sbci	r23, 0xFF	; 255
 d02:	8f 4f       	sbci	r24, 0xFF	; 255
 d04:	9f 4f       	sbci	r25, 0xFF	; 255
 d06:	af 4f       	sbci	r26, 0xFF	; 255
 d08:	b1 e0       	ldi	r27, 0x01	; 1
 d0a:	3e d0       	rcall	.+124    	; 0xd88 <__ultoa_invert+0x9c>
 d0c:	b4 e0       	ldi	r27, 0x04	; 4
 d0e:	3c d0       	rcall	.+120    	; 0xd88 <__ultoa_invert+0x9c>
 d10:	67 0f       	add	r22, r23
 d12:	78 1f       	adc	r23, r24
 d14:	89 1f       	adc	r24, r25
 d16:	9a 1f       	adc	r25, r26
 d18:	a1 1d       	adc	r26, r1
 d1a:	68 0f       	add	r22, r24
 d1c:	79 1f       	adc	r23, r25
 d1e:	8a 1f       	adc	r24, r26
 d20:	91 1d       	adc	r25, r1
 d22:	a1 1d       	adc	r26, r1
 d24:	6a 0f       	add	r22, r26
 d26:	71 1d       	adc	r23, r1
 d28:	81 1d       	adc	r24, r1
 d2a:	91 1d       	adc	r25, r1
 d2c:	a1 1d       	adc	r26, r1
 d2e:	20 d0       	rcall	.+64     	; 0xd70 <__ultoa_invert+0x84>
 d30:	09 f4       	brne	.+2      	; 0xd34 <__ultoa_invert+0x48>
 d32:	68 94       	set
 d34:	3f 91       	pop	r19
 d36:	2a e0       	ldi	r18, 0x0A	; 10
 d38:	26 9f       	mul	r18, r22
 d3a:	11 24       	eor	r1, r1
 d3c:	30 19       	sub	r19, r0
 d3e:	30 5d       	subi	r19, 0xD0	; 208
 d40:	31 93       	st	Z+, r19
 d42:	de f6       	brtc	.-74     	; 0xcfa <__ultoa_invert+0xe>
 d44:	cf 01       	movw	r24, r30
 d46:	08 95       	ret
 d48:	46 2f       	mov	r20, r22
 d4a:	47 70       	andi	r20, 0x07	; 7
 d4c:	40 5d       	subi	r20, 0xD0	; 208
 d4e:	41 93       	st	Z+, r20
 d50:	b3 e0       	ldi	r27, 0x03	; 3
 d52:	0f d0       	rcall	.+30     	; 0xd72 <__ultoa_invert+0x86>
 d54:	c9 f7       	brne	.-14     	; 0xd48 <__ultoa_invert+0x5c>
 d56:	f6 cf       	rjmp	.-20     	; 0xd44 <__ultoa_invert+0x58>
 d58:	46 2f       	mov	r20, r22
 d5a:	4f 70       	andi	r20, 0x0F	; 15
 d5c:	40 5d       	subi	r20, 0xD0	; 208
 d5e:	4a 33       	cpi	r20, 0x3A	; 58
 d60:	18 f0       	brcs	.+6      	; 0xd68 <__ultoa_invert+0x7c>
 d62:	49 5d       	subi	r20, 0xD9	; 217
 d64:	31 fd       	sbrc	r19, 1
 d66:	40 52       	subi	r20, 0x20	; 32
 d68:	41 93       	st	Z+, r20
 d6a:	02 d0       	rcall	.+4      	; 0xd70 <__ultoa_invert+0x84>
 d6c:	a9 f7       	brne	.-22     	; 0xd58 <__ultoa_invert+0x6c>
 d6e:	ea cf       	rjmp	.-44     	; 0xd44 <__ultoa_invert+0x58>
 d70:	b4 e0       	ldi	r27, 0x04	; 4
 d72:	a6 95       	lsr	r26
 d74:	97 95       	ror	r25
 d76:	87 95       	ror	r24
 d78:	77 95       	ror	r23
 d7a:	67 95       	ror	r22
 d7c:	ba 95       	dec	r27
 d7e:	c9 f7       	brne	.-14     	; 0xd72 <__ultoa_invert+0x86>
 d80:	00 97       	sbiw	r24, 0x00	; 0
 d82:	61 05       	cpc	r22, r1
 d84:	71 05       	cpc	r23, r1
 d86:	08 95       	ret
 d88:	9b 01       	movw	r18, r22
 d8a:	ac 01       	movw	r20, r24
 d8c:	0a 2e       	mov	r0, r26
 d8e:	06 94       	lsr	r0
 d90:	57 95       	ror	r21
 d92:	47 95       	ror	r20
 d94:	37 95       	ror	r19
 d96:	27 95       	ror	r18
 d98:	ba 95       	dec	r27
 d9a:	c9 f7       	brne	.-14     	; 0xd8e <__ultoa_invert+0xa2>
 d9c:	62 0f       	add	r22, r18
 d9e:	73 1f       	adc	r23, r19
 da0:	84 1f       	adc	r24, r20
 da2:	95 1f       	adc	r25, r21
 da4:	a0 1d       	adc	r26, r0
 da6:	08 95       	ret

00000da8 <__prologue_saves__>:
 da8:	2f 92       	push	r2
 daa:	3f 92       	push	r3
 dac:	4f 92       	push	r4
 dae:	5f 92       	push	r5
 db0:	6f 92       	push	r6
 db2:	7f 92       	push	r7
 db4:	8f 92       	push	r8
 db6:	9f 92       	push	r9
 db8:	af 92       	push	r10
 dba:	bf 92       	push	r11
 dbc:	cf 92       	push	r12
 dbe:	df 92       	push	r13
 dc0:	ef 92       	push	r14
 dc2:	ff 92       	push	r15
 dc4:	0f 93       	push	r16
 dc6:	1f 93       	push	r17
 dc8:	cf 93       	push	r28
 dca:	df 93       	push	r29
 dcc:	cd b7       	in	r28, 0x3d	; 61
 dce:	de b7       	in	r29, 0x3e	; 62
 dd0:	ca 1b       	sub	r28, r26
 dd2:	db 0b       	sbc	r29, r27
 dd4:	0f b6       	in	r0, 0x3f	; 63
 dd6:	f8 94       	cli
 dd8:	de bf       	out	0x3e, r29	; 62
 dda:	0f be       	out	0x3f, r0	; 63
 ddc:	cd bf       	out	0x3d, r28	; 61
 dde:	09 94       	ijmp

00000de0 <__epilogue_restores__>:
 de0:	2a 88       	ldd	r2, Y+18	; 0x12
 de2:	39 88       	ldd	r3, Y+17	; 0x11
 de4:	48 88       	ldd	r4, Y+16	; 0x10
 de6:	5f 84       	ldd	r5, Y+15	; 0x0f
 de8:	6e 84       	ldd	r6, Y+14	; 0x0e
 dea:	7d 84       	ldd	r7, Y+13	; 0x0d
 dec:	8c 84       	ldd	r8, Y+12	; 0x0c
 dee:	9b 84       	ldd	r9, Y+11	; 0x0b
 df0:	aa 84       	ldd	r10, Y+10	; 0x0a
 df2:	b9 84       	ldd	r11, Y+9	; 0x09
 df4:	c8 84       	ldd	r12, Y+8	; 0x08
 df6:	df 80       	ldd	r13, Y+7	; 0x07
 df8:	ee 80       	ldd	r14, Y+6	; 0x06
 dfa:	fd 80       	ldd	r15, Y+5	; 0x05
 dfc:	0c 81       	ldd	r16, Y+4	; 0x04
 dfe:	1b 81       	ldd	r17, Y+3	; 0x03
 e00:	aa 81       	ldd	r26, Y+2	; 0x02
 e02:	b9 81       	ldd	r27, Y+1	; 0x01
 e04:	ce 0f       	add	r28, r30
 e06:	d1 1d       	adc	r29, r1
 e08:	0f b6       	in	r0, 0x3f	; 63
 e0a:	f8 94       	cli
 e0c:	de bf       	out	0x3e, r29	; 62
 e0e:	0f be       	out	0x3f, r0	; 63
 e10:	cd bf       	out	0x3d, r28	; 61
 e12:	ed 01       	movw	r28, r26
 e14:	08 95       	ret

00000e16 <_exit>:
 e16:	f8 94       	cli

00000e18 <__stop_program>:
 e18:	ff cf       	rjmp	.-2      	; 0xe18 <__stop_program>
